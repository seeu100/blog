<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>一百年后再见</title><link>https://blog.00002000.xyz</link><description>博客——记录点点滴滴</description><copyright>一百年后再见</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://cdn.jsdelivr.net/gh/seeu100/blog/logo.svg</url><title>avatar</title><link>https://blog.00002000.xyz</link></image><lastBuildDate>Fri, 19 Apr 2024 02:54:29 +0000</lastBuildDate><managingEditor>一百年后再见</managingEditor><ttl>60</ttl><webMaster>一百年后再见</webMaster><item><title>Windows系统和激活码KEY</title><link>https://blog.00002000.xyz/post/34.html</link><description>主要是用于虚拟机，在Linux国内软件生态不全的时候有一个Windows的虚拟机可以解决大部分痛点，实体机在有驱动的情况下亦可使用。ED2K下载方式参考[ED2K (eDonkey2000)和BT (BitTorrent)](https://blog.00002000.xyz/post/33.html)&#13;
&#13;
## Windows XP 32位&#13;
- 最新版本下载链接：`ed2k://|file|zh-hans_windows_xp_professional_with_service_pack_3_x86_cd_vl_x14-74070.iso|630237184|EC51916C9D9B8B931195EE0D6EE9B40E|/`&#13;
- 激活码KEY：`MRX3F-47B9T-2487J-KWKMF-RPWBY`&#13;
&#13;
## Windows 7&#13;
- 64位：`ed2k://|file|cn_windows_7_professional_with_sp1_vl_build_x64_dvd_u_677816.iso|3266004992|5A52F4CCEFA71797D58389B397038B2F|/`&#13;
- 32位：`ed2k://|file|cn_windows_7_professional_with_sp1_vl_build_x86_dvd_u_677939.iso|2502909952|935E5B4B754527BE3C238FA6ABDD9B86|/`&#13;
&#13;
## Windows 10&#13;
- 最新版下载链接：https://www.microsoft.com/zh-cn/software-download/windows10ISO （需用非windows浏览器打开才能获取ISO链接，比如安卓）或者`ed2k://|file|zh-cn_windows_10_consumer_editions_version_22h2_updated_april_2024_x64_dvd_9a92dc89.iso|6591338496|3D140C094BA66579C5AA031B5E729529|/`&#13;
- LSTC长期支持企业版：Windows 10 Enterprise LTSC 2021 (x64)  `ed2k://|file|SW_DVD9_WIN_ENT_LTSC_2021_64BIT_ChnSimp_MLF_X22-84402.ISO|5044211712|1555B7DCA052B5958EE68DB58A42408D|/`&#13;
&#13;
## Windows 11&#13;
- 最新版本下载链接：https://www.microsoft.com/software-download/windows11 或者`ed2k://|file|zh-cn_windows_11_consumer_editions_version_23h2_updated_april_2024_x64_dvd_d986680b.iso|7008280576|D85A6F42483CDB163692075644778698|/`&#13;
&#13;
## 激活&#13;
&#13;
管理员权限PowerShell运行`irm https://massgrave.dev/get | iex`或下载[Microsoft-Activation-Scripts](https://github.com/massgravel/Microsoft-Activation-Scripts/archive/refs/heads/master.zip)后运行`All-In-One-Version`文件夹中的`MAS_AIO.cmd`）$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/34.html</guid><pubDate>Fri, 19 Apr 2024 02:50:50 +0000</pubDate></item><item><title>ED2K (eDonkey2000)和BT (BitTorrent)</title><link>https://blog.00002000.xyz/post/33.html</link><description>### ED2K (eDonkey2000)&#13;
&#13;
eD2k，全称为“eDonkey2000 network”，是一个早期且知名的点对点（P2P）文件共享协议及网络，由美国程序员摩西·加龙（Moses_Galoon）和杰里米·齐默尔曼（Jeremy Zawodny）创建，并随着他们的应用程序eDonkey2000客户端流行起来。这个网络允许用户通过互联网直接从其他用户的计算机上下载或上传数据，尤其适用于分享大型文件，例如音乐、电影、软件、文档等。&#13;
&#13;
虽然eDonkey2000客户端不再维护更新，但有许多其他的P2P软件如eMule、aMule等依然支持eD2k协议。&#13;
&#13;
### BT (BitTorrent)&#13;
&#13;
**BitTorrent (BT)** 是另一种广受欢迎的P2P文件共享协议，由布拉姆·科恩（Bram Cohen）于2001年发明。BT协议的核心特点是通过.torrent文件引导下载，该文件包含了元数据信息，如文件名、大小、哈希值等。不同于ED2K依赖于中央服务器索引或者直接的IP寻址，BT使用分布式哈希表（DHT）技术来定位文件的种子和参与者。&#13;
&#13;
用户使用BT下载软件（如uTorrent、BitComet、Transmission等）下载和上传文件。&#13;
&#13;
### BT下载软件&#13;
&#13;
常见的BT下载软件有：&#13;
&#13;
- **uTorrent**: 体积小巧、功能强大的BT客户端，拥有简洁易用的界面和丰富的设置选项。&#13;
- **BitComet**: 支持HTTP/FTP下载、磁力链接以及BT种子下载，还有缓存、预下载等功能。&#13;
- **Transmission**: 开源跨平台的轻量级BT客户端，界面简洁，特别受到Linux和Mac OS X用户的喜爱。&#13;
- **qBittorrent**: 开源的跨平台BT客户端，提供了类似uTorrent的功能，并强调隐私保护和无广告特性。&#13;
- **迅雷**：国内常用，速度较快，但因只下载不上传被称为“吸血雷”。在P2P网络中，公平性原则通常要求用户在下载的同时上传文件片段给其他用户，以保持网络的活力和整体速度。&#13;
$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/33.html</guid><pubDate>Fri, 19 Apr 2024 02:49:52 +0000</pubDate></item><item><title>Windows Hugo 环境搭建</title><link>https://blog.00002000.xyz/post/32.html</link><description>天啊，我竟然在Windows上尝试搭建开发环境，这话放以前我绝不敢相信。然而，现在啥都看开了~~，区区Windows而已，我还要开始灌水式博客了呢:)&#13;
&#13;
## 安装包管理器Chocolatey&#13;
&#13;
安装方式不止两种，我选择通过`cmd.exe`安装，注意本文的命令貌似都需要管理员权限。&#13;
&#13;
```powershell&#13;
@"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -InputFormat None -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" &amp;&amp; SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"&#13;
```&#13;
&#13;
## 安装hugo&#13;
&#13;
```powershell&#13;
choco upgrade chocolatey&#13;
choco install hugo -confirm ## 尴尬的是从GitHub下载包的过程卡在3%不动了，于是我又试了一次，速度很慢，但总算成功了。&#13;
```&#13;
&#13;
## 最后，开始你的hugo旅程吧！顺便说一句，Windows其实也还行（假装很正经）&gt;&gt;&gt;逃~~&#13;
&#13;
## 参考链接&#13;
&#13;
*   https://chocolatey.org/install&#13;
*   https://gohugo.io/getting-started/installing/&#13;
&lt;!-- ##{"timestamp":1650988800}## --&gt;&#13;
$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/32.html</guid><pubDate>Fri, 19 Apr 2024 02:17:56 +0000</pubDate></item><item><title>Linux系统管理常用命令</title><link>https://blog.00002000.xyz/post/31.html</link><description>## Linux 命令行睡眠和休眠&#13;
&#13;
```shell&#13;
systemctl suspend #睡眠&#13;
systemctl hibernate #休眠&#13;
```&#13;
休眠需要先设置好参数和重新生成`initramfs`，参考[Linux开启休眠以及设置低电量自动休眠](https://blog.00002000.xyz/post/11.html)。&#13;
&#13;
## 调节亮度&#13;
```shell&#13;
sudo tee /sys/class/backlight/amdgpu_bl0（不同电脑不同）/brightness &lt;&lt;&lt;99&#13;
```&#13;
&#13;
## 开外置屏幕&#13;
```shell&#13;
xrandr --output HDMI-1 --auto #开启HDMI-1&#13;
xrandr --output HDMI-1 --above eDP-1 #将HDMI-1置于eDP-1上&#13;
xrandr --output HDMI-1 --primary #将HDMI-1设为主屏幕&#13;
xrandr --output HDMI-1 --off #关闭外置屏幕HDMI-1&#13;
```$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/31.html</guid><pubDate>Fri, 19 Apr 2024 02:12:28 +0000</pubDate></item><item><title>区块链 空投</title><link>https://blog.00002000.xyz/post/30.html</link><description>| 时间 | 空投项目 | 目标用户 | &#13;
| -- | -- | -- | &#13;
| 2024-04-19 | [Avail](https://claim.availproject.org/#claimsection) |  Rollup、Starknet、Github、Twitter | &#13;
&#13;
$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/30.html</guid><pubDate>Fri, 19 Apr 2024 00:33:09 +0000</pubDate></item><item><title>人工智能大模型</title><link>https://blog.00002000.xyz/post/28.html</link><description>[LLaMA 3 模型](https://llama.meta.com/llama3/)：Meta 新一代开源模型，拥有 80 亿和 700 亿两种参数规模，拥有 8K 上下文窗口，经过 15T tokens 训练。&#13;
$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/28.html</guid><pubDate>Thu, 18 Apr 2024 16:40:57 +0000</pubDate></item><item><title>区块链行业 投资</title><link>https://blog.00002000.xyz/post/27.html</link><description>| 日期 | 投资金额| 公司/项目 | 备注 |&#13;
| ---      |        ---      |  ---    |        ---      |&#13;
|2024-04-19 | 750 万美元 | Thruster| Blast 生态 DEX 项目，总部位于新加坡 |&#13;
|2024-04-19 | 200 万美元 | Runes DEX | 比特币网络 Runes AMM 平台 |$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/27.html</guid><pubDate>Thu, 18 Apr 2024 16:14:23 +0000</pubDate></item><item><title>区块链-预测-实现情况跟踪</title><link>https://blog.00002000.xyz/post/26.html</link><description>| 日期 | 截止日期| 预测 |实现情况 |&#13;
| ---      |        ---      |  ---    |        ---      |&#13;
|2024-04-19 | 暂定2024年末 | 神鱼：不会有山寨季；目前是牛市中期。| |&#13;
|2024-04-19 | 2024-05-01 | 摩根大通：减半后比特币价格下跌，挖矿算力大幅下降。 | |&#13;
$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/26.html</guid><pubDate>Thu, 18 Apr 2024 16:12:06 +0000</pubDate></item><item><title>区块链月报</title><link>https://blog.00002000.xyz/post/25.html</link><description>- 2024-04-19: Binance 宣布将用户安全资产基金（SAFU）资产全部转换为 USDC，主要对象是16.277k BTC（约 10 亿美元），地址：[1](https://platform.arkhamintelligence.com/explorer/address/0x4B16c5dE96EB2117bBE5fd171E4d203624B014aa) [2](https://platform.arkhamintelligence.com/explorer/address/1BAuq7Vho2CEkVkUxbfU26LhwQjbCmWQkD)$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/25.html</guid><pubDate>Thu, 18 Apr 2024 16:05:36 +0000</pubDate></item><item><title>博客笔记</title><link>https://blog.00002000.xyz/post/24.html</link><description>## 2017&#13;
* 采用hugo框架搭建博客&#13;
## 2023&#13;
* 重新整理博客并上线 blog.00002000.xyz&#13;
## 2024&#13;
* 博客迁移到 Github issues$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/24.html</guid><pubDate>Thu, 18 Apr 2024 15:01:06 +0000</pubDate></item><item><title>一只特立独行的猪 - 王小波</title><link>https://blog.00002000.xyz/post/22.html</link><description>插队的时候，我喂过猪、也放过牛。假如没有人来管，这两种动物也完全知道该怎样生活。它们会自由自在地闲逛，饥则食渴则饮，春天来临时还要谈谈爱情；这样一来，它们的生活层次很低，完全乏善可陈。人来了以后，给它们的生活做出了安排：每一头牛和每一口猪的生活都有了主题。就它们中的大多数而言，这种生活主题是很悲惨的：前者的主题是干活，后者的主题是长肉。我不认为这有什么可抱怨的，因为我当时的生活也不见得丰富了多少，除了八个样板戏，也没有什么消遣。有极少数的猪和牛，它们的生活另有安排。以猪为例，种猪和母猪除了吃，还有别的事可干。就我所见，它们对这些安排也不大喜欢。种猪的任务是交配，换言之，我们的政策准许它当个花花公子。但是疲惫的种猪往往摆出一种肉猪（肉猪是阉过的）才有的正人君子架势，死活不肯跳到母猪背上去。母猪的任务是生崽儿，但有些母猪却要把猪崽儿吃掉。总的来说，人的安排使猪痛苦不堪。但它们还是接受了：猪总是猪啊。&#13;
&#13;
对生活做种种设置是人特有的品性。不光是设置动物，也设置自己。我们知道，在古希腊有个斯巴达，那里的生活被设置得了无生趣，其目的就是要使男人成为亡命战士，使女人成为生育机器，前者像些斗鸡，后者像些母猪。这两类动物是很特别的，但我以为，它们肯定不喜欢自己的生活。但不喜欢又能怎么样？人也好，动物也罢，都很难改变自己的命运。&#13;
&#13;
以下谈到的一只猪有些与众不同。我喂猪时，它已经有四五岁了，从名分上说，它是肉猪，但长得又黑又瘦，两眼炯炯有光。这家伙像山羊一样敏捷，一米高的猪栏一跳就过；它还能跳上猪圈的房顶，这一点又像是猫——所以它总是到处游逛，根本就不在圈里呆着。所有喂过猪的知青都把它当宠儿来对待，它也是我的宠儿——因为它只对知青好，容许他们走到三米之内，要是别的人，它早就跑了。它是公的，原本该劁掉。不过你去试试看，哪怕你把劁猪刀藏在身后，它也能嗅出来，朝你瞪大眼睛，噢噢地吼起来。我总是用细米糠熬的粥喂它，等它吃够了以后，才把糠兑到野草里喂别的猪。其他猪看了嫉妒，一起嚷起来。这时候整个猪场一片鬼哭狼嚎，但我和它都不在乎。吃饱了以后，它就跳上房顶去晒太阳，或者模仿各种声音。它会学汽车响、拖拉机响，学得都很像；有时整天不见踪影，我估计它到附近的村寨里找母猪去了。我们这里也有母猪，都关在圈里，被过度的生育搞得走了形，又脏又臭，它对它们不感兴趣；村寨里的母猪好看一些。它有很多精彩的事迹，但我喂猪的时间短，知道得有限，索性就不写了。总而言之，所有喂过猪的知青都喜欢它，喜欢它特立独行的派头儿，还说它活得潇洒。但老乡们就不这么浪漫，他们说，这猪不正经。领导则痛恨它，这一点以后还要谈到。我对它则不止是喜欢——我尊敬它，常常不顾自己虚长十几岁这一现实，把它叫做“猪兄”。如前所述，这位猪兄会模仿各种声音。我想它也学过人说话，但没有学会——假如学会了，我们就可以做倾心之谈。但这不能怪它。人和猪的音色差得太远了。&#13;
&#13;
后来，猪兄学会了汽笛叫，这个本领给它招来了麻烦。我们那里有座糖厂，中午要鸣一次汽笛，让工人换班。我们队下地干活时，听见这次汽笛响就收工回来。我的猪兄每天上午十点钟总要跳到房上学汽笛，地里的人听见它叫就回来——这可比糖厂鸣笛早了一个半小时。坦白地说，这不能全怪猪兄，它毕竟不是锅炉，叫起来和汽笛还有些区别，但老乡们却硬说听不出来。领导上因此开了一个会，把它定成了破坏春耕的坏分子，要对它采取专政手段——会议的精神我已经知道了，但我不为它担忧——因为假如专政是指绳索和杀猪刀的话，那是一点门都没有的。以前的领导也不是没试过，一百人也治不住它。狗也没用：猪兄跑起来像颗鱼雷，能把狗撞出一丈开外。谁知这回是动了真格的，指导员带了二十几个人，手拿五四式手枪；副指导员带了十几人，手持看青的火枪，分两路在猪场外的空地上兜捕它。这就使我陷入了内心的矛盾：按我和它的交情，我该舞起两把杀猪刀冲出去，和它并肩战斗，但我又觉得这样做太过惊世骇俗——它毕竟是只猪啊；还有一个理由，我不敢对抗领导，我怀疑这才是问题之所在。总之，我在一边看着。猪兄的镇定使我佩服之极：它很冷静地躲在手枪和火枪的连线之内，任凭人喊狗咬，不离那条线。这样，拿手枪的人开火就会把拿火枪的打死，反之亦然；两头同时开火，两头都会被打死。至于它，因为目标小，多半没事。就这样连兜了几个圈子，它找到了一个空子，一头撞出去了；跑得潇洒之极。以后我在甘蔗地里还见过它一次，它长出了獠牙，还认识我，但已不容我走近了。这种冷淡使我痛心，但我也赞成它对心怀叵测的人保持距离。&#13;
&#13;
我已经四十岁了，除了这只猪，还没见过谁敢于如此无视对生活的设置。相反，我倒见过很多想要设置别人生活的人，还有对被设置的生活安之若素的人。因为这个原故，我一直怀念这只特立独行的猪。$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/22.html</guid><pubDate>Thu, 18 Apr 2024 12:22:37 +0000</pubDate></item><item><title>Linux禁止主板蜂鸣音</title><link>https://blog.00002000.xyz/post/10.html</link><description>在笔记本电脑安装ArchLinux时，启动安装盘系统的时候往往`beep`一声。启动后输命令习惯tab一下，可是命令前面没输对，tab不到后面的时候，又`beep`一声。&#13;
&#13;
下面是关闭蜂鸣音的方法：&#13;
&#13;
&lt;!--more--&gt;&#13;
&#13;
```shell&#13;
rmmod pcspkr #临时方案&#13;
echo 'blacklist pcspkr'  &gt;&gt; /etc/modprobe.d/blacklist.conf #永久方案 &#13;
```&#13;
&#13;
Linux中的蜂鸣音通常由计算机主板上的蜂鸣器发出。蜂鸣音在Linux中有多种用途，包括但不限于以下几种情况：&#13;
&#13;
1. **错误或警报提示**：在某些情况下，当计算机发生错误或需要引起用户的注意时，Linux可以发出蜂鸣音来提醒用户，比如硬件故障、电源问题或系统出现严重错误等。&#13;
2. **系统启动确认**：在开机时，蜂鸣音可以被用于确认系统启动的状态。比如，常见的一长连续蜂鸣声可能表示**硬件自检通过**，而频繁的短蜂鸣声可能表示硬件故障或错误。&#13;
3. **输入错误**：在一些命令行界面的应用程序中，如果用户**输入了无效或错误的命令**，蜂鸣音可能会被触发以提醒用户输入错误。&#13;
&#13;
需要注意的是，Linux中的蜂鸣音通常是由硬件层面触发的，并且在某些情况下，用户可以通过设置来启用或禁用蜂鸣音。此外，一些Linux用户也可以通过编程控制蜂鸣音的产生，以满足特定应用的需求。&#13;
&#13;
详细的设置请阅读：&#13;
1. [PC 扬声器 - Arch Linux 中文维基](https://wiki.archlinuxcn.org/wiki/PC_%E6%89%AC%E5%A3%B0%E5%99%A8)&#13;
2. [PC speaker - ArchWiki](https://wiki.archlinux.org/title/PC_speaker)&#13;
&#13;
&lt;!-- ##{"timestamp":1690041600}## --&gt;&#13;
$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/10.html</guid><pubDate>Thu, 18 Apr 2024 11:05:45 +0000</pubDate></item><item><title>nssm - Windows服务封装程序</title><link>https://blog.00002000.xyz/post/7.html</link><description>**对于Windows平台来说，很多软件或系统的后台服务是基于windows服务的方式运行的，它的优势是稳定可靠，有进程保护**。&#13;
&#13;
**NSSM是一个服务封装程序，它可以将普通exe程序或bat文件封装成服务，使之像windows服务一样运行**。&#13;
同类型的工具还有微软自己的srvany，不过nssm更加简单易用，并且功能强大。它的特点如下：&#13;
&#13;
1. 支持普通exe程序（控制台程序或者带界面的Windows程序都可以）或bat文件&#13;
2. 安装简单又方便&#13;
3. 可以重定向输出（并且支持Rotation）&#13;
4. 可以自动守护封装了的服务，程序挂掉了后可以自动重启&#13;
5. 可以自定义环境变量&#13;
6. 可以自定义启动参数&#13;
&#13;
NSSM的官网下载地址：http://nssm.cc/download&#13;
&#13;
#### Latest release&#13;
&#13;
[nssm 2.24](https://nssm.cc/release/nssm-2.24.zip) *(2014-08-31)*&#13;
[be7b3577c6e3a280e5106a9e9db5b3775931cefc]&#13;
&#13;
#### Featured pre-release（winsows10之后建议用这个版本）&#13;
&#13;
[nssm 2.24-101-g897c7ad](https://nssm.cc/ci/nssm-2.24-101-g897c7ad.zip) *(2017-04-26)*&#13;
[ca2f6782a05af85facf9b620e047b01271edd11d]&#13;
&#13;
```powershell&#13;
nssm install 服务名称  #安装服务&#13;
nssm remove 服务名称  #删除服务&#13;
nssm remove 服务名称 confirm  #删除服务确定&#13;
nssm edit 服务名称  #修改服务（显示界面修改）&#13;
nssm start 服务名称  #启动服务&#13;
nssm stop 服务名名称  #停止服务&#13;
nssm restart &lt;servicename&gt; #重启服务&#13;
nssm pause &lt;servicename&gt; #暂停/继续服务&#13;
nssm continue &lt;servicename&gt; #暂停/继续服务&#13;
nssm status &lt;servicename&gt; #查看服务状态&#13;
&#13;
```&#13;
$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/7.html</guid><pubDate>Thu, 18 Apr 2024 10:03:49 +0000</pubDate></item><item><title>小米 13 Pro 刷机资源</title><link>https://blog.00002000.xyz/post/6.html</link><description>## Recovery - TWRP&#13;
- [General - 📌 [Shared\] OFFICIAL TWRP by skkk | XDA Forums](https://xdaforums.com/t/shared-official-twrp-by-skkk.4549575/)&#13;
- https://sourceforge.net/projects/recovery-for-xiaomi-devices/files/nuwa/&#13;
&#13;
## ROM&#13;
- [Download Paranoid Android for xiaomi13](https://paranoidandroid.co/xiaomi13/uvite-beta-1)&#13;
- [Development - Paranoid Android Uvite - Xiaomi 13 (Pro) | XDA Forums](https://xdaforums.com/t/paranoid-android-uvite-xiaomi-13-pro.4648715/)&#13;
- [Development - Paranoid Android Uvite - Xiaomi 13 (Pro) | XDA Forums](https://xdaforums.com/t/paranoid-android-uvite-xiaomi-13-pro.4630549/)&#13;
- [Xiaomi 13 Pro (nuwa) Firmware Downloads | Xiaomi Firmware Updater](https://xiaomifirmwareupdater.com/archive/firmware/nuwa/)&#13;
- [小米 13 Pro (nuwa) 全球版 Fastboot 线刷包 &amp; Recovery 卡刷包 ROM | XiaomiROM.com](https://xiaomirom.com/rom/xiaomi-13-pro-nuwa-global-fastboot-recovery-rom/#下载-小米-13-pro-稳定版-recovery-卡刷包)&#13;
&#13;
&#13;
&#13;
$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/6.html</guid><pubDate>Thu, 18 Apr 2024 09:59:30 +0000</pubDate></item><item><title>刷机工具-adb、fastboot</title><link>https://blog.00002000.xyz/post/5.html</link><description>下载地址如下：&#13;
&#13;
- https://dl.google.com/android/repository/platform-tools-latest-darwin.zip&#13;
- https://dl.google.com/android/repository/platform-tools-latest-linux.zip&#13;
- https://dl.google.com/android/repository/platform-tools-latest-windows.zip&#13;
&#13;
从此地址下载的工具包将永远是最新版本。$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/5.html</guid><pubDate>Thu, 18 Apr 2024 09:57:36 +0000</pubDate></item><item><title>13个免费下载 SVG 图标网站</title><link>https://blog.00002000.xyz/post/3.html</link><description>[原文链接](https://blog.csdn.net/Me_Ordinary/article/details/108992807)&#13;
&#13;
在前端开发过程中，经常会用到各种图标。在各种图标格式中，因为 SVG 既能满足现有图片的功能的前提下，又是矢量图，在可访问性上面也非常不错，并且有利于 SEO 和无障碍，在性能和维护性方面也比 iconfont 要出色许多，是目前使用最广的类型，今天就给大家介绍一些可以免费 SVG 图标的网站。&#13;
&#13;
**1、Ikonate**&#13;
&#13;
Ikonate 提供200多个完全可定制的矢量图标。可以随意设置图标的边框、大小、风格、颜色等属性。在无障碍浏览和性能方面该库也做了充足的优化。&#13;
&#13;
网站名称：Ikonate&#13;
链接地址：[https://www.ikonate.com/](https://www.ikonate.com/)&#13;
&#13;
**2、Simple Icons**&#13;
&#13;
Simple Icons 收录了热门的品牌Logo的SVG格式，同时根据品牌Logo设置了背景色，方便设计查找。&#13;
&#13;
网站名称：Simple Icons&#13;
链接地址：[https://simpleicons.org](https://simpleicons.org/)&#13;
&#13;
**3、SVG Icons**&#13;
&#13;
SVG Icons 收录的图标全部来自 [Dribbble](http://dribbble.com/) ，全部可以免费使用，点击图标按钮即可弹出图标代码，非常方便。&#13;
&#13;
网站名称：SVG Icons&#13;
链接地址：[http://svgicons.sparkk.fr/](http://svgicons.sparkk.fr/)&#13;
&#13;
**4、IconMonstr**&#13;
&#13;
IconMonstr 是一个提供免费的PNG/SVG格式的素材下载站点，收录了4千多个图标，用户可以搜索查找，所有素材都可以免费下载。&#13;
&#13;
网站名称：IconMonstr&#13;
链接地址：[https://iconmonstr.com/](https://iconmonstr.com/)&#13;
&#13;
**5、ICONSVG**&#13;
&#13;
ICONSVG 是一个在线可自定义设计SVG图标素材的网站，帮助前端设计师找到想要的图标素材，这些图标素材都是常用图标，可以点击官方提供的素材进行二次设计，同时也可以把设计好的图标导出。&#13;
&#13;
网站名称：ICONSVG&#13;
链接地址：[https://iconsvg.xyz/](https://iconsvg.xyz/)&#13;
&#13;
**6、Feather Icons**&#13;
&#13;
Feather Icons 是一款免费、开放源代码的矢量图标集，收录八大类型共233个图标，图标设计在24×24网格上，在功能、一致性、简约设计上都具有相同特性，因此很适合在开发项目中使用。&#13;
&#13;
网站名称：Feather Icons&#13;
链接地址：[https://feathericons.com/](https://feathericons.com/)&#13;
&#13;
**7、Flaticon**&#13;
&#13;
Flaticon 收录的图标都是单色、平面化，可以适用于任何网站或用于商业项目，你可以很方便透过 CSS 或其他方式来重新设计图示，让它看起来更符合你的网站。也可以下载为 Webfont、PNG 或是 SVG 等格式。&#13;
&#13;
网站名称：Flaticon&#13;
链接地址：[https://www.flaticon.com/](https://www.flaticon.com/)&#13;
&#13;
**8、Iconfont**&#13;
&#13;
国内功能很强大且图标内容很丰富的矢量图标库，提供矢量图标下载、在线存储、格式转换等功能，阿里巴巴体验团队倾力打造。&#13;
&#13;
网站名称：Iconfont&#13;
链接地址：[https://www.iconfont.cn/](https://www.iconfont.cn/)&#13;
&#13;
**9、Evil Icons**&#13;
&#13;
Evil Icons 是一套简单干净的SVG图标集，开放源代码，对于开发者来说只要几行程式码就能轻松调用，支持 Rails、Sprockets、Node.js、Gulp、Grunt 和 CDN，如果想要自己修改或重新设计，Evil Icons 还提供 SVG、AI 及 Sketch 图标格式下载。&#13;
&#13;
网站名称：Evil Icons&#13;
链接地址：[https://evil-icons.io/](https://evil-icons.io/)&#13;
&#13;
**10、Icons8**&#13;
&#13;
Icons8 主要以提供免费的平面化设计图标为主，可根据不同平台的设计风格来筛选。&#13;
&#13;
网站名称：Icons8&#13;
链接地址：[https://icons8.com](https://icons8.com/)&#13;
&#13;
**11、Free icons**&#13;
&#13;
Free icons是一个可以免费下载SVG、PNG、EPS、AI和PSD格式的平台，在这里，可以找到各种不同样式、大小、格式和主题的图标。所有这些图标完全免费供个人和商业使用。&#13;
&#13;
网站名称：Free icons&#13;
链接地址：[https://freeicons.io](https://freeicons.io/)&#13;
&#13;
**12、illustrio**&#13;
&#13;
illustrio 不仅素材库全面，还可以在线自定义配色预览定制的 15 种不同风格，如果是初次使用，下载前需先使用邮箱注册一个账户并在邮箱中确认。&#13;
&#13;
网站名称：illustrio&#13;
链接地址：[https://illustrio.com](https://illustrio.com/)&#13;
&#13;
**13、Easyicon**&#13;
&#13;
国内开发者，提供★超过六十万个★SVG、PNG、ICO、ICNS图标搜索、图标下载服务。&#13;
&#13;
网站名称：Easyicon&#13;
链接地址：[https://www.easyicon.net/](https://www.easyicon.net/)$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/3.html</guid><pubDate>Thu, 18 Apr 2024 09:46:32 +0000</pubDate></item><item><title>太阳系行星的颜色以及它们对应的颜色代码</title><link>https://blog.00002000.xyz/post/2.html</link><description>1. **水星**：水星表面的颜色因光照角度不同而变化，整体呈现出一种暗淡的灰色至黄褐色，接近于金黄色或者淡橙色。&#13;
   - 颜色代码：大约类似于 #DAA520（暗金色）或 #8B8682（暗灰色）。&#13;
&#13;
2. **金星**：从地球上看到的金星因为浓厚的大气层反射阳光，呈现明亮的白色或金黄色。&#13;
   - 颜色代码：接近于 #FFFFCC（淡黄色）或 #FFFFFF（纯白色）。&#13;
&#13;
3. **地球**：由于海洋占据大部分面积，地球从太空看去呈现蓝色，加上陆地的绿色和云层的白色。&#13;
   - 颜色代码：代表海洋部分的 #00BFFF（深天蓝）；总体外观可参考 #00FFFF（青色）。&#13;
&#13;
4. **火星**：火星因其表面上富含氧化铁（铁锈）而呈现明显的红色或暗红色。&#13;
   - 颜色代码： #FF0000（红色）或 #8B0000（深红色）。&#13;
&#13;
5. **木星**：木星的大气层由多种气体组成，整体看起来是淡黄色的背景上带有明显的橙色和白色条纹。&#13;
   - 颜色代码：大致可表示为 #FDB813（浅金黄色）或 #FFEBCD（淡米黄色）。&#13;
&#13;
6. **土星**：土星大气主要为氢和氦，但云层带呈现出不同的色彩，如金黄色、橙色和棕色，以及极区的绿色区域。&#13;
   - 颜色代码：云带部分可能是 #FFD700（黄金色）；整个行星可视为 #C2B280（沙黄色）或 #9ACD32（橄榄黄色）。&#13;
&#13;
7. **天王星**：天王星的大气层主要是氢、氦和甲烷，呈现淡淡的蓝色，类似于鸭蛋壳的浅绿色。&#13;
   - 颜色代码： #AAD6E6（淡蓝色）或 #77DDDD（浅绿色）。&#13;
&#13;
8. **海王星**：海王星因为大气中含有大量甲烷而呈现出深海般的蓝色。&#13;
   - 颜色代码： #0077BE（深蓝色）或 #5FA0D1（中蓝色）。$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/2.html</guid><pubDate>Thu, 18 Apr 2024 08:24:08 +0000</pubDate></item><item><title>迁移博客到 github issues</title><link>https://blog.00002000.xyz/post/1.html</link><description>[Gmeek](https://github.com/Meekdai/Gmeek) 一个博客框架，超轻量级个人博客模板，完全基于`Github Pages` 、 `Github Issues` 和 `Github Actions`，可以称作`All in Github`。不需要本地部署，从搭建到写作，只需要18秒，2步搭建好博客，第3步就是写作。&#13;
&#13;
[Gmeek快速上手](https://blog.meekdai.com/post/Gmeek-kuai-su-shang-shou.html)&#13;
[Issues · Meekdai/Gmeek](https://github.com/Meekdai/Gmeek/issues)&#13;
&#13;
### 如果要导入以前的文章，如何设置发布时间呢？&#13;
&#13;
如需修改发布时间，可以在文章最后一行添加如下代码。里面的时间是采用时间戳的形式，可以用如下[网站](https://tool.lu/timestamp)转换。&#13;
&#13;
```html&#13;
&lt;!-- ##{"timestamp":1490764800}## --&gt;&#13;
```$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/1.html</guid><pubDate>Thu, 18 Apr 2024 03:52:02 +0000</pubDate></item><item><title>神评收录 2024-1</title><link>https://blog.00002000.xyz/post/23.html</link><description>----&#13;
学生周记: &#13;
        语文是朕的皇后, 虽然朕几乎从来不翻她的牌子, 可她的地位依然是那么的稳固, 英语是朕的华妃, 朕其实并不真正爱她, 只是因为外戚的缘故总要给她家几分面子, 数学是朕的嬛嬛, 那年杏花微雨, 也许一开始就是错的, 体育是朕的纯元皇后, 那才是心中的挚爱, 至于政治, 历史, 地理, 生物这些卑微的官女子, 朕理都懒得理她, 到底是谁让她们入宫的﹗[咒骂][咒骂]&#13;
&#13;
班主任的回复: &#13;
        老奴三年来战战兢兢、夜不思寐, 只为圣上即日面对高考来袭时不至于措手不及, 失了往日威风. 皇后乃是一宫之主, 虽说自幼便与皇上相识, 仍需日日沾顾, 不可与之疏远；华妃虽是外戚, 但时下举国内外以华妃为尊, 请圣上务必思忖为善；甄妃敏锐聪颖, 若能日日眷顾必能助圣上一臂之力；政治, 历史, 地理, 生物这几位贵妃贵人, 圣上更需雨露均沾, 高考一战, 须靠得这几位主子出力…至于纯元皇后, 请圣上听老奴一言, 斯人已矣, 留于心中有个念想即可～～[微笑]&#13;
母亲回复: &#13;
        汝若继续沉迷追剧穿越宫斗, 动摇安身立命之分数, 休怪母后断你𝒘𝒊𝒇𝒊, 毁你𝒊𝒑𝒂𝒅, 追生二胎, 动你储位﹗[发怒]&#13;
&#13;
----&#13;
念数字缓解症状&#13;
姨妈疼：640、380&#13;
胃疼：40、70、820&#13;
失眠：400、320或者380、1600、800&#13;
减肥：90、9、006&#13;
头痛：60、50、30&#13;
便秘：430、720或者300、700、820&#13;
心脏不舒服：650、430、820&#13;
治脱发—白天:260.430.800&#13;
晚上:600.800&#13;
点是指停顿&#13;
&#13;
&lt;!-- ##{"timestamp":1704038400}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/23.html</guid><pubDate>Sun, 31 Dec 2023 16:00:00 +0000</pubDate></item><item><title>安装使用zsh及其强大的插件</title><link>https://blog.00002000.xyz/post/9.html</link><description>### 安装&#13;
&#13;
```sh&#13;
# 安装zsh及其插件（以archlinux为例）&#13;
sudo pacman -S zsh-autosuggestions zsh-syntax-highlighting zsh-theme-powerlevel10k zsh-history-substring-search zsh  zsh-completions&#13;
paru -S zsh-z-git #AUR&#13;
&#13;
# 修改当前用户默认shell&#13;
chsh -s /usr/bin/zsh&#13;
&#13;
# command-not-found钩子&#13;
sudo pacman -S pkgfile &#13;
sudo pkgfile --update&#13;
```&#13;
&#13;
&lt;!--more--&gt;&#13;
### 配置`.zshrc`&#13;
&#13;
主要是将上面的插件放进环境变量里使其生效。&#13;
&#13;
```sh&#13;
source /usr/share/doc/pkgfile/command-not-found.zsh&#13;
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh&#13;
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh&#13;
source /usr/share/zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh&#13;
source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme&#13;
source /usr/share/zsh/plugins/zsh-z/zsh-z.plugin.zsh &#13;
&#13;
&#13;
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.&#13;
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh&#13;
```&#13;
&#13;
### `.zshrc`的其他有用选项：&#13;
```sh&#13;
alias diff 'diff --color=auto'&#13;
alias grep='grep --color=auto'&#13;
alias ls='ls --color=auto'&#13;
&#13;
autoload -Uz compinit&#13;
compinit&#13;
&#13;
zstyle ':completion:*' menu select&#13;
&#13;
# zsh history setting&#13;
export HISTFILE="$HOME/.bash_history"&#13;
export HISTSIZE=1000000000&#13;
export SAVEHIST=$HISTSIZE&#13;
setopt HIST_IGNORE_DUPS&#13;
&#13;
# fix zsh-autosuggestions&#13;
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=23'&#13;
&#13;
&#13;
bindkey -e #绑定emacs快捷键&#13;
bindkey ';' autosuggest-accept #按;自动补全命令建议&#13;
&#13;
export EDITOR='vim'&#13;
```&#13;
&lt;!-- ##{"timestamp":1694707200}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/9.html</guid><pubDate>Thu, 14 Sep 2023 16:00:00 +0000</pubDate></item><item><title>手机充当电脑扬声器</title><link>https://blog.00002000.xyz/post/12.html</link><description>系统环境：`ArchLinux`&#13;
&#13;
`paru PC audio phone`后有两个软件可用：&#13;
```shell&#13;
1. aur/soundwire 3.0.0-4 (+22 0.00) &#13;
    Wirelessly transmit any audio from your PC to your Android phone or other PCs&#13;
2. aur/audiorelay 0.27.5-3 (+5 0.16) &#13;
    Stream your PC audio to your phone&#13;
```&#13;
&#13;
这里选择第一种。&#13;
&#13;
&#13;
64位电脑安装后还需安装：&#13;
`pacman -S pulseaudio-alsa lib32-libpulse lib32-alsa-plugins`[^1]&#13;
&#13;
&#13;
[^1]: [[SOLVED] SoundWire x86_64 doesn't work :D / Newbie Corner / Arch Linux Forums](https://bbs.archlinux.org/viewtopic.php?id=195339)&#13;
&#13;
&lt;!-- ##{"timestamp":1694707200}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/12.html</guid><pubDate>Thu, 14 Sep 2023 16:00:00 +0000</pubDate></item><item><title>Linux开启休眠以及设置低电量自动休眠</title><link>https://blog.00002000.xyz/post/11.html</link><description>## 内核resume恢复机制&#13;
&#13;
1. 添加`resume`钩子，编辑`/etc/mkinitcpio.conf`，将`resume`加入HOOKS。&#13;
```sh&#13;
HOOKS=(base udev autodetect modconf kms keyboard keymap consolefont block filesystems resume fsck)&#13;
```&#13;
&gt; * 交换分区都是通过 `udev` 设备节点来引用的，因此 `resume` 钩子必须在 `udev` 钩子之后。&#13;
&gt; * 当使用带有 `systemd` 钩子的 initramfs 时，已经提供了恢复机制，不需要额外添加钩子。&#13;
&#13;
2. 重新生成`initramfs`。&#13;
```sh&#13;
mkinitcpio -P&#13;
```&#13;
&#13;
## Grub 参数&#13;
&#13;
```sh&#13;
sudo blkid #查看UUID&#13;
sudo vim /etc/default/grub&#13;
GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet resume=UUID=3c2e77b2-456f-42d2-a455-f5425be5ba71"&#13;
GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet resume=UUID=d5b73551-aefc-47bd-8936-31c05ce47299 resume_offset=3417344" #swapfile&#13;
sudo grub-mkconfig -o /boot/grub/grub.cfg&#13;
```&#13;
&#13;
### Swapfile&#13;
&#13;
除了`resume=UUID`外，还需`resume_offset=`:&#13;
&#13;
```shell&#13;
findmnt -no UUID -T /swapfile # 获取resume=UUID&#13;
# resume_offset&#13;
filefrag -v /swapfile | awk '$1=="0:" {print substr($4, 1, length($4)-2)}' # 大多数情况&#13;
btrfs inspect-internal map-swapfile -r /swap/swapfile #btrfs文件系统运行这条&#13;
```&#13;
### btrfs swapfile&#13;
&#13;
```shell&#13;
btrfs subvolume create /swap &#13;
btrfs filesystem mkswapfile --size 16g --uuid clear /swap/swapfile&#13;
swapon /swap/swapfile&#13;
&#13;
#编辑/etc/fstab 添加&#13;
/swap/swapfile none swap defaults 0 0&#13;
```&#13;
&#13;
## 设置低电量休眠&#13;
&#13;
当电池电量极低时，使其休眠，以免丢失数据。&#13;
`sudo vim /etc/UPower/UPower.conf`&#13;
```sh&#13;
PercentageLow=15  # &lt;=15%低电量&#13;
PercentageCritical=10  # &lt;=10%警告电量&#13;
PercentageAction=5  # &lt;=5%执行动作（即CriticalPowerAction)的电量&#13;
CriticalPowerAction=Hibernate # 电量&lt;=5%执行关机&#13;
```&#13;
CriticalPowerAction的取值有：`Poweroff`、`Hibernate`和`Hybid-sleep`。&#13;
&#13;
&lt;!-- ##{"timestamp":1690041600}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/11.html</guid><pubDate>Sat, 22 Jul 2023 16:00:00 +0000</pubDate></item><item><title>修改grub主题</title><link>https://blog.00002000.xyz/post/13.html</link><description>```sh&#13;
sudo pacman -S grub-theme-tela-color-1080p-git # 安装新主题（archlinux为例）&#13;
&#13;
ls /usr/share/grub/themes # 查看现有的主题&#13;
&#13;
sudo vim /etc/default/grub # 在/etc/default/grub添加&#13;
GRUB_THEME="/usr/share/grub/themes/tela-color-1080p/theme.txt" &#13;
&#13;
# 重新生成grub.cfg文件&#13;
sudo grub-mkconfig -o /boot/grub/grub.cfg&#13;
```&#13;
&#13;
&lt;!-- ##{"timestamp":1690041600}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/13.html</guid><pubDate>Sat, 22 Jul 2023 16:00:00 +0000</pubDate></item><item><title>自定义Anki同步服务器</title><link>https://blog.00002000.xyz/post/14.html</link><description>## 更新&#13;
&#13;
现Anki自带Server功能，在Linux上直接命令行运行以下命令即可：&#13;
```shell&#13;
SYNC_USER1=username:password SYNC_PORT=8080 anki --syncserver&#13;
```&#13;
1. `SYNC_USER1=username:password`&#13;
   - 这个环境变量指定的是Anki同步服务器的一个用户凭证，其中`username`是用户名，`password`是对应用户的密码。在自建的Anki同步服务器环境中，通常会设置多个用户以便不同的Anki客户端通过验证连接到服务器进行数据同步。&#13;
&#13;
2. `SYNC_PORT=8080`&#13;
   - 这个环境变量指定了Anki同步服务器监听的网络端口号。8080是一个常用的非标准HTTP端口，这里作为服务器监听客户端连接的入口点。&#13;
&#13;
3. `anki --syncserver`&#13;
   - 这是启动Anki程序并启用同步服务器模式的命令行参数。当Anki以这种方式启动时，它将运行同步服务器服务，而不是打开图形界面应用，这样其他设备上的Anki客户端就可以通过先前设定的用户名、密码和端口号连接到此服务器进行同步操作。&#13;
&#13;
## 旧方法：搭建Anki Server&#13;
&#13;
项目地址：https://github.com/tsudoko/anki-sync-server&#13;
&#13;
```shell&#13;
pkg install python git&#13;
git clone https://github.com/tsudoko/anki-sync-server.git anki&#13;
cd anki&#13;
git submodule update --init&#13;
cd anki-bundled&#13;
sed -i '/# Packaged commands/,$d' anki/sound.py&#13;
sed -i '/^pyaudio/d' requirements.txt&#13;
pip install -r requirements.txt&#13;
pip install webob&#13;
cd ..&#13;
python ankisyncctl.py adduser seeu100（改成自己的用户名）&#13;
python -m ankisyncd&#13;
nohup python -m ankisyncd &gt; /dev/null &amp; #后台运行&#13;
&#13;
#手机上的同步地址和媒体同步地址：&#13;
#http://127.0.0.1:27701/&#13;
#http://127.0.0.1:27701/msync&#13;
#电脑上插件的同步地址：&#13;
#http://手机IP:27701/&#13;
```&#13;
&#13;
&lt;!-- ##{"timestamp":1688745600}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/14.html</guid><pubDate>Fri, 07 Jul 2023 16:00:00 +0000</pubDate></item><item><title>archlinux 安装</title><link>https://blog.00002000.xyz/post/15.html</link><description>## 分区&#13;
&#13;
```shell&#13;
lsblk # 查看硬盘编号&#13;
&#13;
#分区方案&#13;
nvme0n1     476.9G disk&#13;
├─nvme0n1p1   256M part /boot/efi&#13;
├─nvme0n1p2    32G part swap&#13;
├─nvme0n1p3    all part /&#13;
&#13;
#sgdisk --zap-all /dev/nvme0n1 # 清空硬盘（非必要，谨慎操作）&#13;
&#13;
cfdisk -z /dev/nvme0n1&#13;
&#13;
# 选择gpt&#13;
# EFI分区&#13;
# new   ---&gt; 新建分区&#13;
# type  ---&gt; linux-root(x86-64)&#13;
# write ---&gt; 写入硬盘&#13;
# quit  ---&gt; 退出&#13;
&#13;
&#13;
mkfs.fat -F 32 /dev/nvme0n1p1 #格式化efi分区&#13;
mkswap /dev/nvme0n1p2&#13;
swapon /dev/nvme0n1p2  # 挂载交换分区&#13;
&#13;
mkfs.btrfs -L arch /dev/nvme0n1p3&#13;
mount -t btrfs -o compress=zstd /dev/nvme0n1p3 /mnt&#13;
#创建子卷&#13;
btrfs subvolume create /mnt/@ # 创建 / 目录子卷&#13;
btrfs subvolume create /mnt/@home # 创建 /home 目录子卷&#13;
btrfs subvolume list -p /mnt&#13;
&#13;
umount /mnt&#13;
```&#13;
&#13;
## 挂载&#13;
```shell&#13;
mount -t btrfs -o subvol=/@,noatime,relatime,compress=zstd:3,ssd,discard=async,space_cache=v2 /dev/nvme0n1p3 /mnt # 挂载 / 目录  #如果没设置默认子卷，需要加上subvol=vol_root进行挂载&#13;
# 使用zstd压缩,需要内核中开启相应选项,grub2.04版本支持zstd压缩&#13;
# 默认为gzip(compress=on),可选(compress=lzo),不支持lz4&#13;
# zstd默认压缩级别是3,可以用compress=zstd:X 更改(0&lt;= X &lt;=15)&#13;
#新内核需要 space_cache=v2&#13;
&#13;
mkdir -pv /mnt/{boot/efi,home}&#13;
mount -t btrfs -o subvol=/@home,noatime,relatime,compress=zstd:3,ssd,discard=async,space_cache=v2 /dev/nvme0n1p3 /mnt/home # 挂载 /home 目录&#13;
mount /dev/nvme0n1p1 /mnt/boot/efi # 挂载 /boot/efi 目录&#13;
&#13;
# 检查无误后开始安装&#13;
df -hT&#13;
free -h&#13;
&#13;
```&#13;
&#13;
## 安装系统&#13;
&#13;
```shell&#13;
pacstrap -K /mnt base base-devel linux linux-firmware btrfs-progs &#13;
# 如果使用btrfs文件系统，额外安装一个btrfs-progs包&#13;
&#13;
genfstab -U /mnt &gt;&gt; /mnt/etc/fstab&#13;
cat /mnt/etc/fstab&#13;
&#13;
arch-chroot /mnt&#13;
pacman -S vim grub efibootmgr bash-completion dhcpcd iwd&#13;
&#13;
## 装机软件包&#13;
dhcpcd iwd #联网&#13;
grub efibootmgr #引导&#13;
intel-ucode amd-ucode #处理器微码补丁&#13;
bash-completion #命令参数补全&#13;
```&#13;
&#13;
## locale和时间&#13;
&#13;
```shell&#13;
sed -i -e "s/^#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/" /etc/locale.gen&#13;
sed -i -e "s/^#zh_CN.UTF-8 UTF-8/zh_CN.UTF-8 UTF-8/" /etc/locale.gen&#13;
locale-gen&#13;
&#13;
echo 'LANG=en_US.UTF-8' &gt; /etc/locale.conf&#13;
locale&#13;
&#13;
ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&#13;
hwclock --systohc&#13;
```&#13;
&#13;
## grub - 系统引导&#13;
```shell&#13;
grub-install --target=x86_64-efi --bootloader-id=arch --efi-directory=/boot/efi&#13;
grub-mkconfig -o /boot/grub/grub.cfg&#13;
```&#13;
&#13;
## 最后的收尾工作&#13;
&#13;
```shell&#13;
systemctl enable dhcpcd iwd&#13;
EDITOR=vim visudo #wheel组可以使用sudo&#13;
useradd -m -G wheel newuser #新建用户&#13;
passwd #设置密码&#13;
passwd newuser #设置密码&#13;
```&#13;
&#13;
接下篇 #16  [archlinux 配置](https://blog.00002000.xyz/post/16.html) &#13;
&#13;
&lt;!-- ##{"timestamp":1682524800}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/15.html</guid><pubDate>Wed, 26 Apr 2023 16:00:00 +0000</pubDate></item><item><title>archlinux 配置</title><link>https://blog.00002000.xyz/post/16.html</link><description>接上篇 #15  [archlinux 安装](https://blog.00002000.xyz/post/15.html) &#13;
&#13;
### 配置镜像&#13;
```shell&#13;
echo 'Server = https://mirrors.ustc.edu.cn/archlinux/$repo/os/$arch' &gt; /etc/pacman.d/mirrorlist&#13;
```&#13;
### 配置缓存策略，仅保存当前包版本&#13;
```shell&#13;
sed -i -e "s/^#CleanMethod = KeepInstalled/CleanMethod = KeepCurrent/" /etc/pacman.conf&#13;
```&#13;
### 初始化 keyring，这是关键安全配置&#13;
&#13;
https://wiki.archlinux.org/title/Pacman/Package_signing&#13;
&#13;
```shell&#13;
pacman-key --init &amp;&amp; pacman-key --populate&#13;
pacman -Sy archlinux-keyring &amp;&amp; pacman -Su&#13;
```&#13;
## Arch Linux CN / Bioarchlinux 源&#13;
```shell&#13;
sudo vim /etc/pacman.conf &#13;
# 添加下列内容&#13;
[archlinuxcn]&#13;
Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch&#13;
&#13;
[bioarchlinux]&#13;
# China&#13;
# ## ISCAS&#13;
Server = https://mirror.iscas.ac.cn/BioArchLinux/$arch&#13;
# ## Nanjing University&#13;
Server = https://mirror.nju.edu.cn/bioarchlinux/$arch&#13;
# ## Nanjing University of Posts and Telecommunications&#13;
# Server = http://mirrors.njupt.edu.cn/bioarchlinux/$arch&#13;
Server = https://mirrors.njupt.edu.cn/bioarchlinux/$arch&#13;
# ## Shandong University&#13;
# Server = http://mirrors.sdu.edu.cn/bioarchlinux/$arch&#13;
Server = https://mirrors.sdu.edu.cn/bioarchlinux/$arch&#13;
Server = https://repo.bioarchlinux.org/$arch&#13;
&#13;
# 手动信任bioarchlinux key&#13;
sudo pacman-key --recv-keys B1F96021DB62254D&#13;
sudo pacman-key --finger B1F96021DB62254D&#13;
sudo pacman-key --lsign-key B1F96021DB62254D&#13;
&#13;
# 手动信任archlinuxcn key (临时)&#13;
sudo pacman-key --lsign-key "farseerfc@archlinux.org"&#13;
&#13;
# 安装keyring包&#13;
sudo pacman -Sy &amp;&amp; sudo pacman -S archlinuxcn-keyring  bioarchlinux-keyring &amp;&amp; sudo pacman -S paru #AUR安装器&#13;
```&#13;
&#13;
&lt;!-- ##{"timestamp":1682524800}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/16.html</guid><pubDate>Wed, 26 Apr 2023 16:00:00 +0000</pubDate></item><item><title>开启 iwd 自带的 DHCP 客户端</title><link>https://blog.00002000.xyz/post/17.html</link><description>在 `/etc/iwd/main.conf` 添加：&#13;
```shell&#13;
[General]&#13;
EnableNetworkConfiguration=true&#13;
&#13;
```&#13;
&lt;!-- ##{"timestamp":1682524800}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/17.html</guid><pubDate>Wed, 26 Apr 2023 16:00:00 +0000</pubDate></item><item><title>docker 镜像</title><link>https://blog.00002000.xyz/post/18.html</link><description>```shell&#13;
sudo pacman -S docker #安装docker（archlinux为例）&#13;
sudo usermod -aG docker username #添加用户到docker组，否则要root权限才能运行&#13;
newgrp docker&#13;
sudo mkdir /etc/docker&#13;
#添加镜像：&#13;
MIRROR=http://hub-mirror.c.163.com&#13;
cat &lt;&lt;EOF | sudo tee /etc/docker/daemon.json&#13;
{&#13;
  "log-driver": "json-file",&#13;
  "log-opts": {&#13;
    "max-size": "100m"&#13;
  },&#13;
  "registry-mirrors": ["$MIRROR"]&#13;
}&#13;
EOF&#13;
&#13;
sudo systemctl enable docker #开机自启docker服务&#13;
```&#13;
&#13;
&lt;!-- ##{"timestamp":1682524800}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/18.html</guid><pubDate>Wed, 26 Apr 2023 16:00:00 +0000</pubDate></item><item><title>Linux软件清单</title><link>https://blog.00002000.xyz/post/19.html</link><description>题主使用的是ArchLinux，有些包名在其他发行版可能会有变化。&#13;
&#13;
## 系统基础包&#13;
```shell&#13;
base base-devel #基础包，安装系统时已安装&#13;
linux linux-lts linux-firmware #Linux主线内核，LTS长期支持内核，驱动&#13;
```&#13;
&#13;
## 图形界面&#13;
```shell&#13;
xorg-server xorg-xinit #xorg图形服务器和启动脚本&#13;
sddm #桌面登陆管理器&#13;
xfce4 xfce4-goodies #xfce桌面&#13;
awesome #窗口管理器&#13;
alacritty lxterminal xfce4-terminal #Shell图形界面&#13;
xorg-xrandr #多屏幕管理&#13;
```&#13;
&#13;
## 字体&#13;
```shell&#13;
wqy-zenhei #中文字体&#13;
ttf-monaco #英文字体&#13;
```&#13;
&#13;
## 基础软件&#13;
```shell&#13;
tree #查看文件夹结构&#13;
moreutils #vidir等常用小功能&#13;
acpi #查看剩余电量&#13;
alsa-utils #alsamixer开启声音和音量调节&#13;
tmux #终端复用&#13;
git #版本管理&#13;
xclip #xorg图像粘贴&#13;
gvim helix #文本编辑器&#13;
xscreensaver #屏幕保护&#13;
flameshot #截图软件&#13;
fsearch #文件查找&#13;
scrcpy #手机电脑adb连接器&#13;
android-tools #adb和fastboot&#13;
timeshift #系统备份&#13;
wireproxy #代理 wireguard penresolv&#13;
#systemctl enable --now wireproxy.service&#13;
proxychains-ng privoxy #代理+http代理&#13;
aria2 wget #下载器&#13;
jre-openjdk jdk-openjdk #JAVA环境&#13;
paru #AUR管理器&#13;
xscreensaver #屏幕保护&#13;
&#13;
firefox #浏览器&#13;
anki #笔记和复习&#13;
code #编程IDE&#13;
zotero-bin #文献管理&#13;
syncthing #多设备同步&#13;
&#13;
# 压缩&#13;
unrar unzip gzip p7zip&#13;
&#13;
# 科学上网&#13;
obfs4proxy tor v2ray wireproxy&#13;
&#13;
# 编程&#13;
gdb&#13;
ruby npm #编程语言&#13;
r gcc-fortran tk #安装R(rstudio图形IDE)&#13;
echo 'options("repos" = c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))' &gt;&gt; ~/.Rprofile&#13;
&#13;
#照片&#13;
digikam  #照片管理&#13;
gthumb libraw exiv2 #照片简单查看&#13;
tumbler libgsf libgepub libopenraw #thunar文件预览&#13;
&#13;
## 输入法&#13;
fcitx5 fcitx5-chinese-addons fcitx5-qt fcitx5-gtk fcitx5-configtool fcitx5-pinyin-zhwiki &#13;
&#13;
# 生物学专业软件&#13;
bandage blast+ clustalx clustalw figtree-bin gourou-bin megax-bin&#13;
sra-tools-bin python-ncbi-genome-download #NCBI数据下载&#13;
&#13;
# 工具&#13;
create_ap copyq  frpc  geeqie   okular notepadqq  syncthing scrcpy tigervnc chromium&#13;
&#13;
remmina libvncserver freerdp #远程桌面&#13;
&#13;
&#13;
&#13;
virtualbox virtualbox-guest-iso #虚拟机&#13;
&#13;
sudo systemctl enable --now sycnthing@erwa&#13;
&#13;
&#13;
ranger #命令行下文件管理工具&#13;
&#13;
ntfs-3g #读取其他文件系统&#13;
&#13;
keepassxc #密码管理器&#13;
&#13;
&#13;
&#13;
amule #ed2k下载器&#13;
goldendict-ng-git #词典&#13;
&#13;
rssguard #Rss阅读器&#13;
netease-cloud-music-gtk4 #音乐播放器&#13;
libreoffice-still-zh-cn #办公&#13;
telegram-desktop #即时聊天&#13;
&#13;
thunar gvfs gvfs-mtp thunar-volman thunar-archive-plugin #文件管理器&#13;
ark unarchiver p7zip #压缩包管理&#13;
&#13;
okular #PDF查看器&#13;
&#13;
&#13;
&#13;
# 安装pip&#13;
&#13;
sudo pacman -S python-pip&#13;
pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple&#13;
pip install name --user&#13;
&#13;
wechat-uos scrot #微信客户端，截图&#13;
wireguard-tools #wireguard 配置生成&#13;
&#13;
bluez bluez-utils #蓝牙&#13;
pulseaudio-bluetooth kmix #蓝牙音频&#13;
sudo systemctl enable --now bluetooth&#13;
&#13;
downgrade #降级软件包&#13;
texlive-core #pdf&#13;
&#13;
```&#13;
## 游戏&#13;
```shell&#13;
teeworlds #联机对战游戏&#13;
```&#13;
&#13;
&lt;!-- ##{"timestamp":1682524800}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/19.html</guid><pubDate>Wed, 26 Apr 2023 16:00:00 +0000</pubDate></item><item><title>WTFPL-你他妈的想干嘛就干嘛公共许可证</title><link>https://blog.00002000.xyz/post/20.html</link><description>世界之大，无奇不有。发现一个特别好玩的许可证，[WTFPL（Do What The Fuck You Want To Public License）](https://zh.wikipedia.org/wiki/WTFPL)，中文译名是你他妈的想干嘛就干嘛公共许可证，居然还被自由软件基金会认证为兼容GPL的自由软件许可证，哈哈哈哈哈。条款基本等同于贡献到公有领域，[许可证文本](https://web.archive.org/web/20121219075909/http://sam.zoy.org/wtfpl/)：&#13;
&#13;
&#13;
```&#13;
            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE&#13;
                    Version 2, December 2004&#13;
&#13;
 Copyright (C) 2004 Sam Hocevar &lt;sam@hocevar.net&gt;&#13;
&#13;
 Everyone is permitted to copy and distribute verbatim or modified&#13;
 copies of this license document, and changing it is allowed as long&#13;
 as the name is changed.&#13;
&#13;
            DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE&#13;
   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION&#13;
&#13;
  0. You just DO WHAT THE FUCK YOU WANT TO.&#13;
&#13;
&#13;
```&#13;
译文：&#13;
```&#13;
         你他妈的想干嘛就干嘛公共许可证&#13;
              第二版，2004年12月&#13;
&#13;
版权所有(C) 2004 桑·奥塞瓦&lt;sam@hocevar.net&gt;&#13;
&#13;
任何人都有复制与发布本协议的原始或修改过的版本的权利。&#13;
若本协议被修改，须修改协议名称。&#13;
&#13;
         你他妈的想干嘛就干嘛公共许可证&#13;
             复制、发布和修改条款&#13;
&#13;
 0. 你他妈的想干嘛就干嘛。&#13;
```&#13;
&lt;!-- ##{"timestamp":1650988800}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/20.html</guid><pubDate>Tue, 26 Apr 2022 16:00:00 +0000</pubDate></item><item><title>世界的表里和前后端的选择</title><link>https://blog.00002000.xyz/post/21.html</link><description>自然界普遍存在这种现象——首先存在一种简单的事物，在不同的外界条件下，形成几近无数的组合，进而绽放出多种多样的璀璨烟火。如果这种简单基本的事物也是可创造的，那么两种创造者的关系就像是造字的人和用字创作的人一样。&#13;
&#13;
## 最初的感觉&#13;
&#13;
一个人，第一次睁开眼睛看到世界的时候，看到的究竟仅仅是那些华丽的表象，还是无数的基本元素组合呢？又或者是一些我根本看不到甚至连想都想不到的东西？在我看来，后天的教育大多数都只是在引导我们去关注事物的表象，渐渐地，我们就被无数的表象蒙蔽了双眼，忘记了第一次看到这世界时那种无知的感觉。&#13;
&#13;
在世人眼光中，读书能够摆脱无知，学习的知识越多，人知道的东西越多，这个人就越厉害。然而从另一个角度看，这不过是一个人给自己戴上一层又一层认知上的枷锁。这么说可能太难理解，通俗的说就是”知道越多“的意思就是认识里越多”一定“这两个字，从而扼杀了更多的可能。&#13;
&#13;
闭上你的眼睛，暂时忘记你所知道的一切，睁开眼睛，看看这个陌生的世界，你还能找回那种拥有无限希望与可能的感觉吗？看到一个事物，你的脑子第一个蹦出来的，不是那些人为定义的名词，而是自己的想法。这或许就是我们早已失去的思考的自由吧。&#13;
&#13;
## 生命的创造力和意义所在&#13;
&#13;
与死气沉沉的基本物质相比，其组成的生命所拥有的创造力实在惊人，你只要给出原始的材料、适宜的环境和动力，生命所创造事物的数量、种类、速度还有深度都能让你难以置信。&#13;
&#13;
前端技术的发展速度和多样化跟这个不无关系。很久以前我有一个想法：追求一些前端或者说UI的美丽有什么用呢？有这时间还不如去研究研究背后的程序代码。这想法就像是说写这么多文章有什么用呢？不如去研究一下造字和字体组句的过程。&#13;
&#13;
一个事物被创造出来，或偶然，或有意，背后都有特殊的含义，都映射了一些东西。有句话”存在即合理“其实很有道理，只要你经常去思考发现事物的背后，就会越来越认同这句话。&#13;
&#13;
与丰富多彩的表象相比，其背后真正的基础所在却没有几个人去关注。然而，就是这么一群有限的人，他们的发现和创造却像一根根粗壮的柱子，稳稳当当地撑起了整个人类文明的大厦。&#13;
&#13;
文字和文章，无论少了谁，你都将看不到这篇博客。&#13;
&#13;
## 两者的现状&#13;
&#13;
### 前端回归简朴和本质&#13;
&#13;
新鲜而丰富的样式固然会在短时间内对人产生吸引力，但随着时间的推移，无论是商业公司为了减少自身压力和提高客户使用的速度，还是用户想要获得快速直观的使用体验，他们都不再追求复杂的实现，相反对简洁有效的样式产生了需求。于是，有很多优秀的前端设计又逐渐回归到了简朴的风格。&#13;
&#13;
不止于此，当在前端设计上无法取得突破口后，很多人还会返回去研究背后的后端原理，从而结合起来使前端设计更上一层楼。&#13;
&#13;
### 后端的无奈&#13;
&#13;
### 无力&#13;
&#13;
事物发展的过程总会遇到大大小小的瓶颈期，这时突破的难度就会加大，这点对于后端技术的进展尤其如此。遇到的阻碍或大或小，有时大到可以令人绝望。第二次世界大战后，人类的基础理论就进入了一个瓶颈，直到今天仍然无力产生一些大的突破。&#13;
&#13;
### Copyright&#13;
&#13;
如今是一个公认的利益驱动型社会，人们研究出一样东西，不但想要分享出去，还想要获得利益，因此有了版权的出现。版权制度或许在某种程度上通过利益吸引促进了人们的创造，但是更多的是把创造的传递链阻断，阻碍延缓了更进一步的创造。不止版权制度，还有很多很多中间阻碍，包括国家与国家之间的恶性技术竞争等。&#13;
&#13;
## 选择&#13;
&#13;
当我们想要融入这个世界时，总是要选择自己的方向，方向是无限的，取决于你眼中的世界。无论如何选择，都不用后悔，因为你也不知道那些选择了其他方向的你变成了什么样子。&#13;
&#13;
我们可以看到，当后端面临巨大阻碍无法更进一步的时候，前端技术的创造力却丝毫没有减弱。要知道，即使只有两个简单的“0”和“1”，也能拥有无数的可能。因此，我觉得在我们这个时代，其实对于大多数人来说，最佳的选择是偏前端的方向，这些方向可以满足我们那无穷的创作欲望。而偏后端的一些基础研究，需要的毅力和能力都是巨大的，除非你准备好面对这些阻碍，否则放弃也许是更明智的决定。&#13;
&#13;
换个角度看，我们所说的后端也定有其后端所在，前端也必有其前端所在，又何必执着于前后呢？与其明知不可为而为之，不如改变自身看待事物的角度，也许一些苦苦追求的东西，其实就在眼前。&#13;
&#13;
&gt; 原文发表于[世界的表里和前后端的选择 - 知乎](https://zhuanlan.zhihu.com/p/60871376)，现归到一处。&#13;
&#13;
&lt;!-- ##{"timestamp":1553875200}## --&gt;$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/post/21.html</guid><pubDate>Fri, 29 Mar 2019 16:00:00 +0000</pubDate></item><item><title>关于我</title><link>https://blog.00002000.xyz/about.html</link><description>&gt; 我就像一滴大海中的水，大千世界的一个电子，哪里都有我，哪里都没有我。&#13;
&#13;
## 我的技能&#13;
&#13;
- Linux：日常使用、内核编译、环境搭建、Docker&#13;
- 网站搭建：Ngnix、DNS解析、Hugo、Github Pages&#13;
- 基因组组装注释&#13;
- 系统发育建树&#13;
&#13;
半桶水技能：&#13;
- [ ] Shell 编程&#13;
- [ ] Python&#13;
- [ ] R&#13;
- [ ] Rust&#13;
- [ ] ruby&#13;
- [ ] C&#13;
- [ ] Openwrt&#13;
- [ ] Android&#13;
- [ ] Java&#13;
- [ ] javascript&#13;
&#13;
## 我的经历&#13;
&#13;
- [ ] 2021-2024 十大功劳属的分类修订&#13;
&#13;
$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/about.html</guid><pubDate>Thu, 18 Apr 2024 09:51:48 +0000</pubDate></item><item><title>友链</title><link>https://blog.00002000.xyz/link.html</link><description>- [00002000导航](https://00002000.xyz/)$$$$$$$</description><guid isPermaLink="true">https://blog.00002000.xyz/link.html</guid><pubDate>Thu, 18 Apr 2024 10:11:08 +0000</pubDate></item></channel></rss>